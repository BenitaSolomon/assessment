{"id":"../smoke-node/media/media.ts","dependencies":[{"name":"C:\\Users\\Administrator\\Desktop\\smoke\\smoke-node\\tsconfig.json","includedInParent":true,"mtime":1582445133494},{"name":"C:\\Users\\Administrator\\Desktop\\smoke\\package.json","includedInParent":true,"mtime":1582444621053},{"name":"./webrtc","loc":{"line":30,"column":25},"parent":"C:\\Users\\Administrator\\Desktop\\smoke\\smoke-node\\media\\media.ts","resolved":"C:\\Users\\Administrator\\Desktop\\smoke\\smoke-node\\media\\webrtc.ts"},{"name":"./mse","loc":{"line":31,"column":22},"parent":"C:\\Users\\Administrator\\Desktop\\smoke\\smoke-node\\media\\media.ts","resolved":"C:\\Users\\Administrator\\Desktop\\smoke\\smoke-node\\media\\mse.ts"}],"generated":{"js":"\"use strict\";\n/*--------------------------------------------------------------------------\r\n\r\nsmoke-node\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2020 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n\r\n---------------------------------------------------------------------------*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst webrtc_1 = require(\"./webrtc\");\n\nconst mse_1 = require(\"./mse\");\n/**\r\n * Provides interface for creating and generating MediaStream and MediaSource\r\n * objects for video playback and streaming. This namespace deals with both\r\n * the WebRTC MediaStream API as well as the Media Source Extension API.\r\n */\n\n\nclass Media {\n  /**\r\n   * Generates a live video feed from a background captureStream(). Useful for\r\n   * testing mediastream pass-through over webrtc.\r\n   *\r\n   * @example\r\n   *\r\n   * ```typescript\r\n   *\r\n   * const mediastream = media.createTestPattern()\r\n   * const video = document.getElementById('video-id')\r\n   * video.srcObject = mediastream\r\n   * video.play()\r\n   * ```\r\n   */\n  createTestPattern() {\n    return webrtc_1.WebRTC.createTestPattern();\n  }\n  /**\r\n   * Creates a MediaSource from the given Readable<Buffer>. Accepts a codec type\r\n   * for playback of 'webm' and 'mp4' content only.\r\n   *\r\n   * @example\r\n   *\r\n   * ```typescript\r\n   *\r\n   * const readable = files.readable('/video.webm')\r\n   * const mediasource = media.createMediaSource(readable, 'webm')\r\n   * const video = document.getElementById('video-id')\r\n   * video.src = URL.createObjectURL(mediasource)\r\n   * video.play()\r\n   * ```\r\n   */\n\n\n  createMediaSource(readable, codec) {\n    return mse_1.MediaSourceExtensions.createMediaSource(readable, codec);\n  }\n\n}\n\nexports.Media = Media;"},"sourceMaps":{"js":{"mappings":[{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":34,"column":0}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":34,"column":6}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":34,"column":14}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":34,"column":17}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":34,"column":24}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":34,"column":25}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":34,"column":35}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":34,"column":36}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":36,"column":0}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":36,"column":6}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":36,"column":11}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":36,"column":14}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":36,"column":21}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":36,"column":22}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":36,"column":29}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":36,"column":30}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":34,"column":0},"generated":{"line":37,"column":0}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":44,"column":0}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":39,"column":13},"generated":{"line":44,"column":6}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":44,"column":11}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":39,"column":18},"generated":{"line":44,"column":12}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":45,"column":0}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":55,"column":9},"generated":{"line":59,"column":0}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":55,"column":9},"generated":{"line":59,"column":2}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":55,"column":26},"generated":{"line":59,"column":19}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":55,"column":26},"generated":{"line":59,"column":22}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":56,"column":4},"generated":{"line":60,"column":0}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":56,"column":11},"generated":{"line":60,"column":11}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":56,"column":11},"generated":{"line":60,"column":19}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":56,"column":11},"generated":{"line":60,"column":20}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":56,"column":11},"generated":{"line":60,"column":26}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":56,"column":18},"generated":{"line":60,"column":27}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":56,"column":11},"generated":{"line":60,"column":44}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":56,"column":4},"generated":{"line":60,"column":46}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":57,"column":3},"generated":{"line":61,"column":0}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":59,"column":2},"generated":{"line":62,"column":0}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":74,"column":9},"generated":{"line":79,"column":0}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":74,"column":9},"generated":{"line":79,"column":2}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":74,"column":26},"generated":{"line":79,"column":19}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":74,"column":27},"generated":{"line":79,"column":20}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":74,"column":26},"generated":{"line":79,"column":28}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":74,"column":55},"generated":{"line":79,"column":30}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":74,"column":26},"generated":{"line":79,"column":35}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":74,"column":72},"generated":{"line":79,"column":37}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":76,"column":4},"generated":{"line":80,"column":0}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":76,"column":11},"generated":{"line":80,"column":11}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":76,"column":11},"generated":{"line":80,"column":16}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":76,"column":11},"generated":{"line":80,"column":17}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":76,"column":11},"generated":{"line":80,"column":38}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":76,"column":33},"generated":{"line":80,"column":39}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":76,"column":11},"generated":{"line":80,"column":56}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":76,"column":51},"generated":{"line":80,"column":57}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":76,"column":11},"generated":{"line":80,"column":65}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":76,"column":61},"generated":{"line":80,"column":67}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":76,"column":11},"generated":{"line":80,"column":72}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":76,"column":4},"generated":{"line":80,"column":73}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":77,"column":3},"generated":{"line":81,"column":0}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":39,"column":18},"generated":{"line":83,"column":0}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":85,"column":0}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":85,"column":7}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":85,"column":8}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":85,"column":13}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":85,"column":16}},{"source":"../smoke-node/media/media.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":85,"column":21}}],"sources":{"../smoke-node/media/media.ts":"/*--------------------------------------------------------------------------\r\n\r\nsmoke-node\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2020 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n\r\n---------------------------------------------------------------------------*/\r\n\r\nimport { Buffer }                            from '../buffer/index'\r\nimport { Readable }                          from '../streams/index'\r\nimport { WebRTC }                            from './webrtc'\r\nimport { MediaSourceExtensions, MediaCodec } from './mse'\r\n\r\n/** \r\n * Provides interface for creating and generating MediaStream and MediaSource \r\n * objects for video playback and streaming. This namespace deals with both\r\n * the WebRTC MediaStream API as well as the Media Source Extension API.\r\n */\r\nexport class Media {\r\n\r\n  /**\r\n   * Generates a live video feed from a background captureStream(). Useful for\r\n   * testing mediastream pass-through over webrtc.\r\n   * \r\n   * @example\r\n   * \r\n   * ```typescript\r\n   * \r\n   * const mediastream = media.createTestPattern()\r\n   * const video = document.getElementById('video-id')\r\n   * video.srcObject = mediastream\r\n   * video.play()\r\n   * ```\r\n   */\r\n  public createTestPattern(): MediaStream {\r\n    return WebRTC.createTestPattern()\r\n  }\r\n\r\n  /** \r\n   * Creates a MediaSource from the given Readable<Buffer>. Accepts a codec type\r\n   * for playback of 'webm' and 'mp4' content only.\r\n   * \r\n   * @example\r\n   * \r\n   * ```typescript\r\n   * \r\n   * const readable = files.readable('/video.webm')\r\n   * const mediasource = media.createMediaSource(readable, 'webm')\r\n   * const video = document.getElementById('video-id')\r\n   * video.src = URL.createObjectURL(mediasource)\r\n   * video.play()\r\n   * ```\r\n   */\r\n  public createMediaSource(readable: Readable<Buffer>, codec: MediaCodec): MediaSource {\r\n    \r\n    return MediaSourceExtensions.createMediaSource(readable, codec)\r\n  }\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"b45a96bef615bbe586c56adce408e49b","cacheData":{"env":{}}}