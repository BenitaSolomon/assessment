{"id":"../smoke-node/hub/hub.ts","dependencies":[{"name":"C:\\Users\\Administrator\\Desktop\\smoke\\smoke-node\\tsconfig.json","includedInParent":true,"mtime":1582445133494},{"name":"C:\\Users\\Administrator\\Desktop\\smoke\\package.json","includedInParent":true,"mtime":1582444621053}],"generated":{"js":"\"use strict\";\n/*--------------------------------------------------------------------------\r\n\r\nsmoke-node\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2020 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n\r\n---------------------------------------------------------------------------*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});"},"sourceMaps":{"js":{"mappings":[{"source":"../smoke-node/hub/hub.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":2,"column":0}}],"sources":{"../smoke-node/hub/hub.ts":"/*--------------------------------------------------------------------------\r\n\r\nsmoke-node\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2020 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n\r\n---------------------------------------------------------------------------*/\r\n\r\nimport { EventHandler } from '../async/index'\r\n\r\n// ------------------------------------------------------------\r\n//\r\n// Hub Signalling Protocol\r\n//\r\n// ------------------------------------------------------------\r\n\r\nexport interface Binding {\r\n   type:          'binding'\r\n   address:       string\r\n   configuration: RTCConfiguration\r\n }\r\n \r\n export interface Forward<T = any> {\r\n   type:          'forward'\r\n   from:          string\r\n   to:            string\r\n   data:          T\r\n }\r\n \r\n/**\r\n * Common network hub. This type acts as a bridge between the local and\r\n * remote nodes within a peer network. It deals with forwarding messages \r\n * to and from peers within a network, providing each node an unique \r\n * address and optionally providing a mechanism for hostname registration\r\n * and DNS routing services for peers within a network.\r\n */\r\nexport interface Hub {\r\n\r\n   /** Subscribes to events on this hub. */\r\n   on(event: 'forward', func: EventHandler<Forward>): void\r\n\r\n   /** Subscribes to error events on this hub. */\r\n   on(event: 'error',   func: EventHandler<Error>): void\r\n\r\n   /** Returns the RTC configuration for this hub. */\r\n   configuration(): Promise<RTCConfiguration>\r\n \r\n   /** Returns the address of this hub. */\r\n   address(): Promise<string>\r\n \r\n   /** Forwards the given message to the given 'to' address. */\r\n   forward<T>(to: string, data: T): Promise<void>\r\n}"},"lineCount":null}},"error":null,"hash":"794663ea9699ad6cba94fc2d09af098b","cacheData":{"env":{}}}